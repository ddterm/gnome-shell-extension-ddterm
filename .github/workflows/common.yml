concurrency: ${{ github.workflow }}/${{ github.ref }}

on:
  workflow_dispatch:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:2022.11.07.0

    steps:
    - id: checkout
      uses: actions/checkout@v3

    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"

    - uses: actions/setup-node@v3

    - run: npm ci

    - run: make lint

    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: make schemas
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: make locales
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: xvfb-run make gtk-builder-validate
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: make msgcmp
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

    - run: |
        tox --sitepackages -e pip-compile
        git diff --exit-code --color=always
      if: ${{ always() && steps.checkout.conclusion == 'success' }}
      working-directory: test

    - run: |
        RENOVATE_PYTHON_VER="Python $(jq -r .constraints.python renovate.json)"
        IMAGE_PYTHON_VER="$(python3 --version)"
        if [ "$RENOVATE_PYTHON_VER" != "$IMAGE_PYTHON_VER" ]; then
          echo "Please fix Python version in renovate.json."
          echo "Current version: $RENOVATE_PYTHON_VER Expected: $IMAGE_PYTHON_VER."
          exit 1
        fi
      if: ${{ always() && steps.checkout.conclusion == 'success' }}

  pack:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:2022.11.07.0

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: npm ci
    - run: xvfb-run make pack
    - id: upload
      uses: actions/upload-artifact@v3
      with:
        name: pack
        path: "*.shell-extension.zip"
        if-no-files-found: error

  configure-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.generate.outputs.images }}
    steps:
      - uses: actions/checkout@v3
      - run: pip3 install --use-pep517 -r requirements/podman-compose.txt
        working-directory: test
      - id: generate
        run: echo "images=$(podman-compose config --services | jq -Rcn '[inputs]')" >>$GITHUB_OUTPUT
        working-directory: test

  test:
    needs:
    - lint
    - pack
    - configure-test-matrix

    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ddterm/ci-docker-image:2022.11.07.0
      options: --privileged --cgroupns=host --tmpfs /tmp --tmpfs /run

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.configure-test-matrix.outputs.images) }}

    env:
      PY_COLORS: 1
      TOX_TESTENV_PASSENV: PY_COLORS GITHUB_ACTIONS PIP_DISABLE_PIP_VERSION_CHECK
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"
    - id: setup_testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}
      continue-on-error: true
    - uses: actions/download-artifact@v3
      with:
        name: pack
    - run: mkdir -p "$HOME/.cache/pip"
    - run: tox -e podman-compose -- pull ${{ matrix.image }}
      working-directory: test
    - run: tox -vv --notest --sitepackages
      working-directory: test
    - run: |
        echo "::remove-matcher owner=generic::"
        echo "::remove-matcher owner=generic-nolocation::"
    - run: >-
        tox --sitepackages --
        --self-contained-html
        --junitxml=junit.xml
        --compose-service ${{ matrix.image }}
        --pack ../*.shell-extension.zip
        -n auto
        --screenshot-failing-only
        -v
      working-directory: test
    - run: testspace --verbose "[${{ matrix.image }}]./test/junit.xml" "[${{ matrix.image }}]+./test/report.html"
      if: ${{ always() && steps.setup_testspace.outcome == 'success' }}
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.image }}
        path: |
          test/report.html
          test/junit.xml
      if: always()
