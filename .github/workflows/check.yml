name: check

concurrency: ${{ github.workflow }}/${{ github.ref }}

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - run: npm ci
    - run: make lint

  schemas:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: make schemas

  locales:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: make locales

  gtk-builder-validate:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: xvfb-run make gtk-builder-validate

  msgcmp:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:master

    steps:
    - uses: actions/checkout@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: make msgcmp

  build:
    uses: ./.github/workflows/pack-reusable.yml

  test:
    needs:
    - lint
    - schemas
    - locales
    - gtk-builder-validate
    - msgcmp

    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ddterm/ci-docker-image:master
      options: --privileged --cgroupns=host --tmpfs /tmp --tmpfs /run

    strategy:
      fail-fast: false
      matrix:
        image:
          - 'fedora-35'
          - 'fedora-36'
          - 'debian-11'
          - 'ubuntu-20.04'
          - 'ubuntu-22.04'

    env:
      IMAGE: ghcr.io/ddterm/gnome-shell-pod/${{ matrix.image }}:master
      PY_COLORS: 1
      TOX_TESTENV_PASSENV: PY_COLORS GITHUB_ACTIONS PIP_DISABLE_PIP_VERSION_CHECK
      TOXENV: py3-ghactions
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
    - run: echo "::add-matcher::.github/problem-matchers/generic.json"
    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"
    - id: setup_testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}
      continue-on-error: true
    - run: npm ci
    - run: xvfb-run make test-deps
    - run: tox -vv --notest --sitepackages
      working-directory: test
    - run: for retry in 1 2 3; do podman pull "${{ env.IMAGE }}" && break; done
    - run: |
        echo "::remove-matcher owner=generic::"
        echo "::remove-matcher owner=generic-nolocation::"
    - run: tox --sitepackages -- --self-contained-html --junitxml=junit.xml --container-image "${{ env.IMAGE }}" -n 2 --screenshot-failing-only -v
      working-directory: test
    - run: testspace --verbose "[${{ matrix.image }}]./test/junit.xml" "[${{ matrix.image }}]+./test/report.html"
      if: ${{ steps.setup_testspace.outcome == 'success' }}
      continue-on-error: true
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.image }}
        path: |
          test/report.html
          test/junit.xml
      if: always()
