on:
  workflow_call:

env:
  FORCE_COLOR: 1
  PIP_DISABLE_PIP_VERSION_CHECK: 1

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get GNOME Shell container images list from compose.yaml
        id: generate
        run: |
          echo "matrix=$(./images.py matrix)" >>$GITHUB_OUTPUT
        working-directory: test

  test:
    needs: configure

    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ddterm/ci-docker-image:2024.04.10.0
      options: --privileged --cgroupns=host --tmpfs /tmp --tmpfs /run

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.configure.outputs.matrix) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Enable generic error matcher
      run: echo "::add-matcher::.github/problem-matchers/generic.json"

    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"

    - name: Setup Testspace
      id: setup_testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}
      continue-on-error: true

    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.profile == 'esm' && 'pack' || 'pack-legacy' }}

    - name: Pre-create pip cache directory
      run: mkdir -p "$HOME/.cache/pip"

    - name: Pull GNOME Shell container image
      run: tox -e images -- pull ${{ matrix.service }}
      working-directory: test

    - name: Install Python test dependencies
      run: tox -vv --notest --sitepackages
      working-directory: test

    - name: Disable generic error matcher
      run: |
        echo "::remove-matcher owner=generic::"
        echo "::remove-matcher owner=generic-nolocation::"

    - name: Run tests
      run: >-
        tox --sitepackages --
        --self-contained-html
        --junitxml=junit.xml
        --compose-service ${{ matrix.service }}
        --pack ../*.shell-extension.zip
        -n auto
        --dist worksteal
        --screenshot-failing-only
        -vv
        --markdown-report $GITHUB_STEP_SUMMARY
      working-directory: test

    - name: Upload report to Testspace
      run: testspace --verbose "[${{ matrix.service }}]./test/junit.xml" "[${{ matrix.service }}]+./test/report.html"
      if: ${{ always() && steps.setup_testspace.outcome == 'success' }}

    - name: Upload report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.service }}-reports
        path: |
          test/report.html
          test/junit.xml
      if: always()
