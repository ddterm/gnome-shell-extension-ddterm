# SPDX-FileCopyrightText: 2021 Aleksandr Mezin <mezin.alexander@gmail.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

on:
  workflow_dispatch:
    inputs:
      package-artifact:
        description: 'Extension package artifact name'
        type: string
        default: pack
        required: false
      containers:
        description: 'Test container images, as JSON list'
        type: string
        required: false
      args:
        description: 'Arguments to pass to pytest'
        type: string
        default: '--package *.shell-extension.zip'
        required: false
      testspace:
        description: 'Publish report to Testspace'
        type: boolean
        default: false
        required: false
  workflow_call:
    inputs:
      package-artifact:
        description: 'Extension package artifact name'
        type: string
        default: pack
        required: false
      containers:
        description: 'Test container images, as JSON list'
        type: string
        required: false
      args:
        description: 'Arguments to pass to pytest'
        type: string
        default: '--package *.shell-extension.zip'
        required: false
      testspace:
        description: 'Publish report to Testspace'
        type: boolean
        default: false
        required: false

jobs:
  configure:
    runs-on: ubuntu-24.04

    outputs:
      containers: ${{ steps.config.outputs.containers }}

    if: ${{ !inputs.containers }}

    steps:
      - uses: actions/checkout@v4

      - id: config
        working-directory: tests
        run: |
          docker compose config --services | grep -v archlinux | jq -cnR '[inputs]' | sed -e "s/^/containers=/" >> "$GITHUB_OUTPUT"

  test:
    needs: configure
    if: ${{ always() && (inputs.containers || needs.configure.result == 'success') }}

    strategy:
      fail-fast: false
      matrix:
        container: ${{ fromJson(inputs.containers || needs.configure.outputs.containers) }}

    runs-on: ubuntu-24.04

    container:
      image: ghcr.io/ddterm/ci-docker-image:2025.04.16.0
      options: --privileged --tmpfs /run -v /tmp:/tmp --cgroupns=host

    env:
      FORCE_COLOR: 1
      PIP_DISABLE_PIP_VERSION_CHECK: 1

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Enable generic error matcher
      uses: ./.github/actions/generic-problem-matcher

    - run: git config --global --replace-all safe.directory "$GITHUB_WORKSPACE"

    - name: Setup Testspace
      id: setup_testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}
      continue-on-error: true
      if: ${{ inputs.testspace }}

    - name: Download extension package
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.package-artifact }}

    - name: Make directory writable
      run: chmod a+rw . tests

    - name: Configure container for Podman
      run: |
        mount --make-rshared /
        CGROUP="$(grep '^0::' /proc/self/cgroup)"
        chown -R github-actions:github-actions "/sys/fs/cgroup${CGROUP#0::}"

    - name: Pull GNOME Shell container image
      run: >-
        sudo --preserve-env --set-home --user=github-actions --
        tox -e images -- pull ${{ matrix.container }}

    - name: Install Python test dependencies
      run: >-
        sudo --preserve-env --set-home --user=github-actions --
        tox -vv --notest --sitepackages -e pytest

    - name: Disable generic error matcher
      uses: ./.github/actions/generic-problem-matcher
      with:
        enable: false

    - name: Run tests
      run: >-
        exec sudo --preserve-env --set-home --user=github-actions --
        tox --sitepackages -e pytest --
        --self-contained-html
        --junitxml=tests/junit.xml
        --container ${{ matrix.container }}
        ${{ !contains(matrix.container, 'alpine') && '--journald' || '' }}
        ${{ inputs.args }}
        -n auto
        -vv

    - name: Upload report to Testspace
      run: testspace --verbose "[${{ matrix.container }}]./tests/junit.xml" "[${{ matrix.container }}]+./tests/report.html"
      if: ${{ always() && steps.setup_testspace.outcome == 'success' }}

    - name: Upload report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.container }}-reports
        path: |
          tests/report.html
          tests/junit.xml
      if: always()
